#include "Common.h"
#include "SSTable.h"
#include "Controller.h"
#include "BloomFilter.h"
#include "Query.h"


using namespace std;

int main() {
	srand(time(NULL));
	std::vector<std::string> names{ "Binny", "Bird", "Birdie", "Birgit", "Birgitta",
		"Blair", "Blaire", "Blake", "Blakelee", "Blakeley",
		"Blanca", "Blanch", "Blancha", "Blanche", "Blinni",
		"Blinnie", "Blinny", "Bliss", "Blisse", "Blithe",
		"Binny", "Bird", "Birdie", "Birgit", "Birgitta",
		"Blair", "Blaire", "Blake", "Blakelee", "Blakeley",
		"Blanca", "Blanch", "Blancha", "Blanche", "Blinni",
		"Blinnie", "Blinny", "Bliss", "Blisse", "Blithe" };

	std::vector<std::string> ids(40);
	for (int i = 0; i < 40; i++) {
		ids[i] = std::to_string(10000 + rand() % 90000);
	}

	std::vector<std::string> ages(40);
	for (int i = 0; i < 40; i++) {
		ages[i] = std::to_string(10 + rand() % 5);
	}

	Query qr;
	qr.createTable("student");
	for (int i = 0; i < 40; i++) {
		qr.insert(std::vector<std::string>{"name", "id", "age"},
			std::vector<std::string>{names[i], ids[i], ages[i]}).into("student");
	}

	qr.select({ "name" }).from("student").getResult().print();
	qr.deleteEntry("student", "age", 4);
	qr.deleteEntry("student", "age", 6);
	qr.deleteEntry("student", "age", 8);
	qr.deleteEntry("student", "age", 10);
	qr.deleteEntry("student", "age", 5);
	qr.deleteEntry("student", "age", 7);
	qr.deleteEntry("student", "age", 9);
	qr.deleteEntry("student", "age", 11);
	qr.select({ "name", "age" }).from("student").getResult().printAsTable();

	cout << "Overall false poisitive error rate of bloom filters: " << float(bfFp) / bfNg << endl;
	cout << bfNg << endl;
	return 0;
}